!function($){$.fn.board_task=function(task){return this.each(function(){var $task=$(this);$task.timers=[],$task.skip_first_save=!0,$task.on("save",function(){if($task.skip_first_save)return $task.skip_first_save=!1,!1;var t=tasks[task.ID].__export();t.action="save_task",t.kanban_nonce=$("#kanban_nonce").val(),$.ajax({method:"POST",url:ajaxurl,data:t}).always(function(t){show_growl_msg(t)}),$(".col-tasks").same_height()}),$task.on("delete",function(){var t=tasks[task.ID].__export();t.action="delete_task",t.kanban_nonce=$("#kanban_nonce").val(),$.ajax({method:"POST",url:ajaxurl,data:t}).done(function(){delete tasks[t.task.ID],$task.slideUp("fast",function(){$task.remove(),$(".col-tasks").same_height()})}).always(function(t){show_growl_msg(t)})}),$task.on("add_comment",function(t,a){if("undefined"==typeof a||""==a)return!1;var e={id:task.ID,action:"save_comment",post_type:"task",kanban_nonce:$("#kanban_nonce").val(),comment_content:a};$.ajax({method:"POST",url:ajaxurl,data:e})});var add_work_hour=function(t){var a=tasks[task.ID].__export();a.action="add_work_hour",a.kanban_nonce=$("#kanban_nonce").val(),a.operator=t,$.ajax({method:"POST",url:ajaxurl,data:a})};$task.on("click",".editable-input",function(){var t=$(this);t.prop("readonly")&&($(".editable-input").not(t).prop("readonly",!0),t.data("orig",t.val()),t.prop("readonly",!1),setTimeout(function(){t.focus().trigger("click").select()},100))}),$task.on("keyup",".editable-input",function(t){var a=$(this);if(13==t.keyCode&&a.trigger("blur"),27==t.keyCode){var e=a.data("orig");a.val(e).prop("readonly",!0)}}),$task.on("blur",".editable-input",function(){var t=$(this);t.prop("readonly",!0)}),$task.on("click",".delete-task",function(){var t=tasks[task.ID].__export();return $task.trigger("delete",[t]),$task.trigger("add_comment",["{0} deleted the task".sprintf(current_user.short_name)]),!1}),$("textarea.resize",$task).autoresize({onResize:function(){$(this).addClass("autoresize")}}).trigger("keydown"),$task.on("click",".dropdown-menu-allowed-users .btn",function(){var t=$(this),a=t.val();task.postmeta.kanban_task_user_id_assigned=a,$task.attr("data-assigned-to",a),$task.trigger("add_comment",["{0} assigned the task to {1}".sprintf(current_user.short_name,$(".task-assigned-to-short_name",$task).text())])}),$task.on("click",".dropdown-menu-estimates .btn",function(){var t=$(this),a=t.val();task.terms.kanban_task_estimate=[a];for(var e in estimates)if(estimates[e].term_taxonomy_id==a){var s=estimates[e];break}$task.trigger("add_comment",["{0} set the task estimate to {1}".sprintf(current_user.short_name,s.name)])}),$task.on("click",".btn-work-hours",function(){return $(".work-hours-operators",$task).toggleClass("active"),!1}),$task.on("click",".work-hours-operators .btn",function(){var $btn=$(this),operator=$btn.val(),current=parseInt(task.postmeta.kanban_task_work_hour_count);current=eval(current+operator),0>current&&(current=0),task.postmeta.kanban_task_work_hour_count=current,add_work_hour(operator);var comment="+1"==operator?" logged an hour of work":" subtracted an hour of work";return $task.trigger("add_comment",["{0} {1}".sprintf(current_user.short_name,comment)]),!1});var project={};try{"undefined"!=typeof project_records[task.postmeta.kanban_task_project_id]&&(project=project_records[task.postmeta.kanban_task_project_id],$task.attr("data-project-id",task.postmeta.kanban_task_project_id))}catch(err){}var $project=$(t_card_project.render(project));$(".wrapper-task-project",$task).append($project),$(".project_title",$project).autocomplete({minLength:0,focus:function(t,a){return $(t.target).val(a.item.label),!1},select:function(t,a){return task.postmeta.kanban_task_project_id=a.item.ID,$(t.target).val(a.item.label).trigger("blur"),$task.attr("data-project-id",a.item.ID),$task.trigger("add_comment",['{0} added the task to the project "{1}"'.sprintf(current_user.short_name,a.item.label)]),!1},source:function(t,a){a($.map(projects.projects,function(t){return{label:t.post_title,ID:t.ID}}))}}).on("focus",function(){$(this).autocomplete("search")}).on("keyup",function(t){var a=$(this);if(13==t.keyCode){a.autocomplete("close");var e={action:"save_project",kanban_nonce:$("#kanban_nonce").val(),project:{post_title:a.val()}};$.ajax({method:"POST",url:ajaxurl,data:e}).done(function(t){"undefined"!=typeof t.data&&"undefined"!=typeof t.data.project&&(task.postmeta.kanban_task_project_id=t.data.project.ID,a.attr("data-id",t.data.project.ID),a.val(t.data.project.post_title),projects.projects.push(t.data.project),$task.trigger("add_comment",['{0} added the task to the project "{1}"'.sprintf(current_user.short_name,t.data.project.post_title)]))}).always(function(t){show_growl_msg(t)})}27==t.keyCode&&a.autocomplete("close")}),$(".task_title",$task).on("keydown",function(t){$(this);return 13==t.keyCode?!1:void 0}).on("blur",function(){var t=$(this);task.post_title=t.val(),$task.trigger("add_comment",["{0} updated the task title".sprintf(current_user.short_name)])});for(var i in allowed_users){var user=allowed_users[i],$user=$(t_allowed_users.render(user));$(".dropdown-menu-allowed-users",$task).append($user)}for(var i in estimates){var estimate=estimates[i],$estimate=$(t_estimates.render(estimate));$(".dropdown-menu-estimates",$task).append($estimate)}tasks[task.ID]=new Bind({task:task},{task:{callback:function(){var t=0;if("undefined"!=typeof this.task.terms.kanban_task_estimate[0]&&"undefined"!=typeof this.task.postmeta.kanban_task_work_hour_count){for(var a in estimates)if(estimates[a].term_taxonomy_id==this.task.terms.kanban_task_estimate[0]){var e=estimates[a];break}"undefined"!=typeof e&&(t=100*parseInt(this.task.postmeta.kanban_task_work_hour_count)/parseInt(e.slug))}var s="success";t>133?s="danger":t>100&&(s="warning"),t>100&&(t=100),$("#task-"+this.task.ID+" .progress-bar").css({width:t+"%"}).removeClass("progress-bar-success progress-bar-warning progress-bar-danger").addClass("progress-bar-"+s),clearTimeout($task.timers.save),$task.timers.save=setTimeout(function(){$task.trigger("save")},100)}},"task.status_color":function(t){var a=$("#task-"+this.task.ID);$(".task-handle",a).css({background:t})},"task.terms.kanban_task_estimate.0":{dom:"#task-"+task.ID+" .btn-estimate",transform:function(t){for(var a in estimates)if(estimates[a].term_taxonomy_id==t){var e=estimates[a];break}if("undefined"==typeof e)var s="--";else var s=format_hours(e.slug);var r={kanban_task_estimate:s},n=$(t_card_estimate.render(r));return n.html()}},"task.postmeta.kanban_task_user_id_assigned":{dom:"#task-"+task.ID+" .btn-assigned-to",transform:function(t){var a;"undefined"==typeof allowed_users[t]?a={data:{short_name:"-- Assign --",initials:"--"}}:(a=allowed_users[t],$task.attr("data-assigned-to",t));var e=$(t_card_user_assigned_to.render(a));return e.html()}},"task.postmeta.kanban_task_work_hour_count":{dom:"#task-"+task.ID+" .btn-work-hours",transform:function(t){0>t&&(t=0);var a;a=format_hours(t);var e={kanban_task_work_hour_count:a},s=$(t_card_work_hours.render(e));return s.html()}}})})}}(jQuery);